//
//  YFRStyleKit.m
//  YFRLittleBits -
//   WARNING: this code is autogenerated and should not be modified directly.
//
//   The Robot Arm artwork is property of PixelCut and has graciously allowed
//   this project to use it. Learn more at http://www.paintcodeapp.com/
//
//  Created by Chris Wilson on 1/4/15.
//  Copyright (c) 2015 Yepher. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "YFRStyleKit.h"


@implementation YFRStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawRobotArmViewWithAngle: (CGFloat)angle
{
    //// General Declarations
    CGContextRef context = (CGContextRef)NSGraphicsContext.currentContext.graphicsPort;

    //// Color Declarations
    NSColor* primaryStroke = [NSColor colorWithCalibratedRed: 0.45 green: 0.45 blue: 0.45 alpha: 1];

    //// Variable Declarations
    CGFloat fingerAngle1 = -56;
    CGFloat fingerAngle2 = -fingerAngle1;
    CGFloat largerAngle = -2 * angle;

    //// Variables Illustration
    {
        [NSGraphicsContext saveGraphicsState];
        CGContextTranslateCTM(context, 0.28, 0.3);
        CGContextRotateCTM(context, 0.08 * M_PI / 180);



        //// Arm 1
        {
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 45.51, 49.06);
            CGContextRotateCTM(context, 64.69 * M_PI / 180);



            //// Bezier 61 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, -1.27, 0);

            NSBezierPath* bezier61Path = NSBezierPath.bezierPath;
            [bezier61Path moveToPoint: NSMakePoint(1, 36)];
            [bezier61Path curveToPoint: NSMakePoint(-35.04, 0) controlPoint1: NSMakePoint(-18.63, 36) controlPoint2: NSMakePoint(-35.04, 19.61)];
            [bezier61Path curveToPoint: NSMakePoint(1, -36) controlPoint1: NSMakePoint(-35.04, -19.61) controlPoint2: NSMakePoint(-18.63, -36)];
            [bezier61Path curveToPoint: NSMakePoint(114.12, -26) controlPoint1: NSMakePoint(20.63, -36) controlPoint2: NSMakePoint(99.75, -27)];
            [bezier61Path curveToPoint: NSMakePoint(140.15, 0) controlPoint1: NSMakePoint(128.5, -25) controlPoint2: NSMakePoint(140.15, -15)];
            [bezier61Path curveToPoint: NSMakePoint(114.12, 26) controlPoint1: NSMakePoint(140.15, 15) controlPoint2: NSMakePoint(128.5, 24)];
            [bezier61Path curveToPoint: NSMakePoint(1, 36) controlPoint1: NSMakePoint(99.75, 28) controlPoint2: NSMakePoint(20.63, 36)];
            [bezier61Path closePath];
            [NSColor.whiteColor setFill];
            [bezier61Path fill];
            [primaryStroke setStroke];
            [bezier61Path setLineWidth: 2];
            [bezier61Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Arm 2
            {
                [NSGraphicsContext saveGraphicsState];
                CGContextTranslateCTM(context, 113, 0);
                CGContextRotateCTM(context, angle * M_PI / 180);



                //// Arm 3
                {
                    [NSGraphicsContext saveGraphicsState];
                    CGContextTranslateCTM(context, 98, 0);
                    CGContextRotateCTM(context, (largerAngle - 142.687988281) * M_PI / 180);



                    //// Bezier 63 Drawing
                    NSBezierPath* bezier63Path = NSBezierPath.bezierPath;
                    [bezier63Path moveToPoint: NSMakePoint(57, -15)];
                    [bezier63Path curveToPoint: NSMakePoint(72, -0) controlPoint1: NSMakePoint(65.28, -14) controlPoint2: NSMakePoint(72, -8.28)];
                    [bezier63Path curveToPoint: NSMakePoint(57, 15) controlPoint1: NSMakePoint(72, 8.28) controlPoint2: NSMakePoint(65.28, 14)];
                    [bezier63Path curveToPoint: NSMakePoint(0, 21) controlPoint1: NSMakePoint(48.72, 16) controlPoint2: NSMakePoint(11.6, 21)];
                    [bezier63Path curveToPoint: NSMakePoint(-21, -0) controlPoint1: NSMakePoint(-11.6, 21) controlPoint2: NSMakePoint(-21, 11.6)];
                    [bezier63Path curveToPoint: NSMakePoint(0, -21) controlPoint1: NSMakePoint(-21, -11.6) controlPoint2: NSMakePoint(-11.6, -21)];
                    [bezier63Path curveToPoint: NSMakePoint(57, -15) controlPoint1: NSMakePoint(11.6, -21) controlPoint2: NSMakePoint(48.72, -16)];
                    [bezier63Path closePath];
                    [NSColor.whiteColor setFill];
                    [bezier63Path fill];
                    [primaryStroke setStroke];
                    [bezier63Path setLineWidth: 2];
                    [bezier63Path stroke];


                    //// Finger A1
                    {
                        [NSGraphicsContext saveGraphicsState];
                        CGContextTranslateCTM(context, 69.65, -10.9);
                        CGContextRotateCTM(context, fingerAngle1 * M_PI / 180);



                        //// Finger A2
                        {
                            [NSGraphicsContext saveGraphicsState];
                            CGContextTranslateCTM(context, 38.91, 6.36);
                            CGContextRotateCTM(context, fingerAngle2 * M_PI / 180);



                            //// Bezier 65 Drawing
                            NSBezierPath* bezier65Path = NSBezierPath.bezierPath;
                            [bezier65Path moveToPoint: NSMakePoint(-7.5, -8.54)];
                            [bezier65Path curveToPoint: NSMakePoint(-14.5, -1.04) controlPoint1: NSMakePoint(-10.97, -8.13) controlPoint2: NSMakePoint(-14.5, -5.54)];
                            [bezier65Path curveToPoint: NSMakePoint(-7.5, 6.46) controlPoint1: NSMakePoint(-14.5, 3.46) controlPoint2: NSMakePoint(-10.97, 6.06)];
                            [bezier65Path curveToPoint: NSMakePoint(28.69, 3.35) controlPoint1: NSMakePoint(-4.03, 6.87) controlPoint2: NSMakePoint(25.83, 3.85)];
                            [bezier65Path curveToPoint: NSMakePoint(33.5, -1.15) controlPoint1: NSMakePoint(31.6, 2.84) controlPoint2: NSMakePoint(33.5, 1.54)];
                            [bezier65Path curveToPoint: NSMakePoint(28.69, -5.65) controlPoint1: NSMakePoint(33.5, -3.85) controlPoint2: NSMakePoint(31.6, -5.15)];
                            [bezier65Path curveToPoint: NSMakePoint(-7.5, -8.54) controlPoint1: NSMakePoint(25.83, -6.15) controlPoint2: NSMakePoint(-4.03, -8.94)];
                            [bezier65Path closePath];
                            [NSColor.whiteColor setFill];
                            [bezier65Path fill];
                            [primaryStroke setStroke];
                            [bezier65Path setLineWidth: 2];
                            [bezier65Path stroke];



                            [NSGraphicsContext restoreGraphicsState];
                        }


                        //// Bezier 64 Drawing
                        NSBezierPath* bezier64Path = NSBezierPath.bezierPath;
                        [bezier64Path moveToPoint: NSMakePoint(36.5, -8.14)];
                        [bezier64Path curveToPoint: NSMakePoint(43.5, -0.64) controlPoint1: NSMakePoint(39.97, -7.73) controlPoint2: NSMakePoint(43.5, -5.14)];
                        [bezier64Path curveToPoint: NSMakePoint(36.5, 6.86) controlPoint1: NSMakePoint(43.5, 3.86) controlPoint2: NSMakePoint(39.97, 6.46)];
                        [bezier64Path curveToPoint: NSMakePoint(0.31, 7.86) controlPoint1: NSMakePoint(33.03, 7.27) controlPoint2: NSMakePoint(5.17, 7.86)];
                        [bezier64Path curveToPoint: NSMakePoint(-8.5, -0.64) controlPoint1: NSMakePoint(-4.56, 7.86) controlPoint2: NSMakePoint(-8.5, 4.06)];
                        [bezier64Path curveToPoint: NSMakePoint(0.31, -9.14) controlPoint1: NSMakePoint(-8.5, -5.33) controlPoint2: NSMakePoint(-4.56, -9.14)];
                        [bezier64Path curveToPoint: NSMakePoint(36.5, -8.14) controlPoint1: NSMakePoint(5.17, -9.14) controlPoint2: NSMakePoint(33.03, -8.54)];
                        [bezier64Path closePath];
                        [NSColor.whiteColor setFill];
                        [bezier64Path fill];
                        [primaryStroke setStroke];
                        [bezier64Path setLineWidth: 2];
                        [bezier64Path stroke];


                        //// Oval 56 Drawing
                        NSBezierPath* oval56Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(32.5, -4.14, 7, 7)];
                        [NSColor.whiteColor setFill];
                        [oval56Path fill];
                        [primaryStroke setStroke];
                        [oval56Path setLineWidth: 2];
                        [oval56Path stroke];


                        //// Oval 51 Drawing
                        NSBezierPath* oval51Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(-4.5, -5.14, 9, 9)];
                        [NSColor.whiteColor setFill];
                        [oval51Path fill];
                        [primaryStroke setStroke];
                        [oval51Path setLineWidth: 2];
                        [oval51Path stroke];



                        [NSGraphicsContext restoreGraphicsState];
                    }


                    //// Finger B1
                    {
                        [NSGraphicsContext saveGraphicsState];
                        CGContextTranslateCTM(context, 69.5, 10.5);
                        CGContextRotateCTM(context, fingerAngle2 * M_PI / 180);



                        //// Finger B2
                        {
                            [NSGraphicsContext saveGraphicsState];
                            CGContextTranslateCTM(context, 40.91, -4.68);
                            CGContextRotateCTM(context, fingerAngle1 * M_PI / 180);



                            //// Bezier 66 Drawing
                            NSBezierPath* bezier66Path = NSBezierPath.bezierPath;
                            [bezier66Path moveToPoint: NSMakePoint(-7.5, -9.54)];
                            [bezier66Path curveToPoint: NSMakePoint(-14.5, -2.04) controlPoint1: NSMakePoint(-10.97, -9.13) controlPoint2: NSMakePoint(-14.5, -6.54)];
                            [bezier66Path curveToPoint: NSMakePoint(-7.5, 5.46) controlPoint1: NSMakePoint(-14.5, 2.46) controlPoint2: NSMakePoint(-10.97, 5.06)];
                            [bezier66Path curveToPoint: NSMakePoint(28.69, 2.35) controlPoint1: NSMakePoint(-4.03, 5.87) controlPoint2: NSMakePoint(25.83, 2.85)];
                            [bezier66Path curveToPoint: NSMakePoint(33.5, -2.15) controlPoint1: NSMakePoint(31.6, 1.84) controlPoint2: NSMakePoint(33.5, 0.54)];
                            [bezier66Path curveToPoint: NSMakePoint(28.69, -6.65) controlPoint1: NSMakePoint(33.5, -4.85) controlPoint2: NSMakePoint(31.6, -6.15)];
                            [bezier66Path curveToPoint: NSMakePoint(-7.5, -9.54) controlPoint1: NSMakePoint(25.83, -7.15) controlPoint2: NSMakePoint(-4.03, -9.94)];
                            [bezier66Path closePath];
                            [NSColor.whiteColor setFill];
                            [bezier66Path fill];
                            [primaryStroke setStroke];
                            [bezier66Path setLineWidth: 2];
                            [bezier66Path stroke];



                            [NSGraphicsContext restoreGraphicsState];
                        }


                        //// Bezier 67 Drawing
                        NSBezierPath* bezier67Path = NSBezierPath.bezierPath;
                        [bezier67Path moveToPoint: NSMakePoint(35.89, -7.18)];
                        [bezier67Path curveToPoint: NSMakePoint(42.79, 0.32) controlPoint1: NSMakePoint(39.31, -6.78) controlPoint2: NSMakePoint(42.79, -4.18)];
                        [bezier67Path curveToPoint: NSMakePoint(35.89, 7.82) controlPoint1: NSMakePoint(42.79, 4.82) controlPoint2: NSMakePoint(39.31, 7.41)];
                        [bezier67Path curveToPoint: NSMakePoint(0.19, 8.82) controlPoint1: NSMakePoint(32.46, 8.22) controlPoint2: NSMakePoint(4.98, 8.82)];
                        [bezier67Path curveToPoint: NSMakePoint(-8.5, 0.32) controlPoint1: NSMakePoint(-4.61, 8.82) controlPoint2: NSMakePoint(-8.5, 5.01)];
                        [bezier67Path curveToPoint: NSMakePoint(0.19, -8.18) controlPoint1: NSMakePoint(-8.5, -4.38) controlPoint2: NSMakePoint(-4.61, -8.18)];
                        [bezier67Path curveToPoint: NSMakePoint(35.89, -7.18) controlPoint1: NSMakePoint(4.98, -8.18) controlPoint2: NSMakePoint(32.46, -7.59)];
                        [bezier67Path closePath];
                        [NSColor.whiteColor setFill];
                        [bezier67Path fill];
                        [primaryStroke setStroke];
                        [bezier67Path setLineWidth: 2];
                        [bezier67Path stroke];


                        //// Oval 57 Drawing
                        NSBezierPath* oval57Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(31.5, -3.18, 7, 7)];
                        [NSColor.whiteColor setFill];
                        [oval57Path fill];
                        [primaryStroke setStroke];
                        [oval57Path setLineWidth: 2];
                        [oval57Path stroke];


                        //// Oval 58 Drawing
                        NSBezierPath* oval58Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(-4.5, -4.18, 9, 9)];
                        [NSColor.whiteColor setFill];
                        [oval58Path fill];
                        [primaryStroke setStroke];
                        [oval58Path setLineWidth: 2];
                        [oval58Path stroke];



                        [NSGraphicsContext restoreGraphicsState];
                    }



                    [NSGraphicsContext restoreGraphicsState];
                }


                //// Bezier 62 Drawing
                NSBezierPath* bezier62Path = NSBezierPath.bezierPath;
                [bezier62Path moveToPoint: NSMakePoint(99, -21)];
                [bezier62Path curveToPoint: NSMakePoint(120, -0) controlPoint1: NSMakePoint(110.6, -20) controlPoint2: NSMakePoint(120, -11.6)];
                [bezier62Path curveToPoint: NSMakePoint(99, 21) controlPoint1: NSMakePoint(120, 11.6) controlPoint2: NSMakePoint(110.6, 20)];
                [bezier62Path curveToPoint: NSMakePoint(-0, 26) controlPoint1: NSMakePoint(87.4, 22) controlPoint2: NSMakePoint(14.36, 26)];
                [bezier62Path curveToPoint: NSMakePoint(-26, -0) controlPoint1: NSMakePoint(-14.36, 26) controlPoint2: NSMakePoint(-26, 14.36)];
                [bezier62Path curveToPoint: NSMakePoint(-0, -26) controlPoint1: NSMakePoint(-26, -14.36) controlPoint2: NSMakePoint(-14.36, -26)];
                [bezier62Path curveToPoint: NSMakePoint(99, -21) controlPoint1: NSMakePoint(14.36, -26) controlPoint2: NSMakePoint(87.4, -22)];
                [bezier62Path closePath];
                [NSColor.whiteColor setFill];
                [bezier62Path fill];
                [primaryStroke setStroke];
                [bezier62Path setLineWidth: 2];
                [bezier62Path stroke];


                //// Oval 39 Drawing
                NSBezierPath* oval39Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(-9, -9, 18, 18)];
                [NSColor.whiteColor setFill];
                [oval39Path fill];
                [primaryStroke setStroke];
                [oval39Path setLineWidth: 2];
                [oval39Path stroke];


                //// Oval 43 Drawing
                NSBezierPath* oval43Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(90, -8, 16, 16)];
                [NSColor.whiteColor setFill];
                [oval43Path fill];
                [primaryStroke setStroke];
                [oval43Path setLineWidth: 2];
                [oval43Path stroke];


                //// Bezier 80 Drawing
                NSBezierPath* bezier80Path = NSBezierPath.bezierPath;
                [bezier80Path moveToPoint: NSMakePoint(-0, 9)];
                [bezier80Path lineToPoint: NSMakePoint(-0, -9)];
                [NSColor.whiteColor setFill];
                [bezier80Path fill];
                [primaryStroke setStroke];
                [bezier80Path setLineWidth: 2];
                [bezier80Path stroke];


                //// Bezier 79 Drawing
                NSBezierPath* bezier79Path = NSBezierPath.bezierPath;
                [bezier79Path moveToPoint: NSMakePoint(-9, 0)];
                [bezier79Path lineToPoint: NSMakePoint(9, 0)];
                [NSColor.whiteColor setFill];
                [bezier79Path fill];
                [primaryStroke setStroke];
                [bezier79Path setLineWidth: 2];
                [bezier79Path stroke];


                //// Group
                {
                    [NSGraphicsContext saveGraphicsState];
                    CGContextTranslateCTM(context, 98, 0);
                    CGContextRotateCTM(context, (largerAngle - 66) * M_PI / 180);



                    //// Bezier Drawing
                    NSBezierPath* bezierPath = NSBezierPath.bezierPath;
                    [bezierPath moveToPoint: NSMakePoint(-1.84, 7.79)];
                    [bezierPath lineToPoint: NSMakePoint(1.84, -7.79)];
                    [primaryStroke setStroke];
                    [bezierPath setLineWidth: 2];
                    [bezierPath stroke];


                    //// Bezier 3 Drawing
                    NSBezierPath* bezier3Path = NSBezierPath.bezierPath;
                    [bezier3Path moveToPoint: NSMakePoint(7.79, 1.84)];
                    [bezier3Path lineToPoint: NSMakePoint(-7.79, -1.84)];
                    [primaryStroke setStroke];
                    [bezier3Path setLineWidth: 2];
                    [bezier3Path stroke];



                    [NSGraphicsContext restoreGraphicsState];
                }



                [NSGraphicsContext restoreGraphicsState];
            }


            //// Oval 46 Drawing
            NSBezierPath* oval46Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(-12, -12, 24, 24)];
            [NSColor.whiteColor setFill];
            [oval46Path fill];
            [primaryStroke setStroke];
            [oval46Path setLineWidth: 2];
            [oval46Path stroke];


            //// Bezier 68 Drawing
            NSBezierPath* bezier68Path = NSBezierPath.bezierPath;
            [bezier68Path moveToPoint: NSMakePoint(0, 12)];
            [bezier68Path lineToPoint: NSMakePoint(0, -12)];
            [NSColor.whiteColor setFill];
            [bezier68Path fill];
            [primaryStroke setStroke];
            [bezier68Path setLineWidth: 2];
            [bezier68Path stroke];


            //// Bezier 69 Drawing
            NSBezierPath* bezier69Path = NSBezierPath.bezierPath;
            [bezier69Path moveToPoint: NSMakePoint(12, 0)];
            [bezier69Path lineToPoint: NSMakePoint(-12, 0)];
            [NSColor.whiteColor setFill];
            [bezier69Path fill];
            [primaryStroke setStroke];
            [bezier69Path setLineWidth: 2];
            [bezier69Path stroke];



            [NSGraphicsContext restoreGraphicsState];
        }



        [NSGraphicsContext restoreGraphicsState];
    }
}

+ (void)drawPressureGuageWithAngle: (CGFloat)angle
{
    //// General Declarations
    CGContextRef context = (CGContextRef)NSGraphicsContext.currentContext.graphicsPort;

    //// Color Declarations
    NSColor* color3 = [NSColor colorWithCalibratedRed: 0.156 green: 0.488 blue: 0.862 alpha: 1];
    NSColor* secondaryStroke = color3;
    NSColor* primaryStroke = [NSColor colorWithCalibratedRed: 0.45 green: 0.45 blue: 0.45 alpha: 1];

    //// Variable Declarations
    CGFloat largerAngle = -2 * angle;

    //// Variables Illustration
    {
        //// Gauge
        {
            //// Oval 35 Drawing
            NSBezierPath* oval35Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(301, 141, 100, 100)];
            [NSColor.whiteColor setFill];
            [oval35Path fill];
            [primaryStroke setStroke];
            [oval35Path setLineWidth: 2];
            [oval35Path stroke];


            //// Oval 36 Drawing
            NSBezierPath* oval36Path = NSBezierPath.bezierPath;
            [oval36Path moveToPoint: NSMakePoint(315.49, 170.5)];
            [oval36Path curveToPoint: NSMakePoint(330.5, 226.51) controlPoint1: NSMakePoint(304.17, 190.11) controlPoint2: NSMakePoint(310.89, 215.19)];
            [oval36Path curveToPoint: NSMakePoint(386.51, 211.5) controlPoint1: NSMakePoint(350.11, 237.83) controlPoint2: NSMakePoint(375.19, 231.11)];
            [oval36Path curveToPoint: NSMakePoint(386.51, 170.5) controlPoint1: NSMakePoint(393.83, 198.81) controlPoint2: NSMakePoint(393.83, 183.19)];
            [oval36Path lineToPoint: NSMakePoint(374.38, 177.5)];
            [oval36Path curveToPoint: NSMakePoint(374.38, 204.5) controlPoint1: NSMakePoint(379.21, 185.85) controlPoint2: NSMakePoint(379.21, 196.15)];
            [oval36Path curveToPoint: NSMakePoint(337.5, 214.38) controlPoint1: NSMakePoint(366.93, 217.41) controlPoint2: NSMakePoint(350.41, 221.84)];
            [oval36Path curveToPoint: NSMakePoint(327.62, 177.5) controlPoint1: NSMakePoint(324.59, 206.93) controlPoint2: NSMakePoint(320.16, 190.41)];
            [oval36Path lineToPoint: NSMakePoint(315.49, 170.5)];
            [oval36Path closePath];
            [primaryStroke setStroke];
            [oval36Path setLineWidth: 2];
            [oval36Path stroke];


            //// Bezier 71 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, 90 * M_PI / 180);

            NSBezierPath* bezier71Path = NSBezierPath.bezierPath;
            [bezier71Path moveToPoint: NSMakePoint(34, -0)];
            [bezier71Path lineToPoint: NSMakePoint(41, -0)];
            [primaryStroke setStroke];
            [bezier71Path setLineWidth: 2];
            [bezier71Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Gauge Arrow
            {
                [NSGraphicsContext saveGraphicsState];
                CGContextTranslateCTM(context, 351, 191);
                CGContextRotateCTM(context, (largerAngle - 161.063293457) * M_PI / 180);



                //// Bezier 57 Drawing
                NSBezierPath* bezier57Path = NSBezierPath.bezierPath;
                [bezier57Path moveToPoint: NSMakePoint(-4, -14)];
                [bezier57Path lineToPoint: NSMakePoint(-4, -5)];
                [bezier57Path lineToPoint: NSMakePoint(-3, 5)];
                [bezier57Path lineToPoint: NSMakePoint(-3, 33)];
                [bezier57Path lineToPoint: NSMakePoint(-0, 37)];
                [bezier57Path lineToPoint: NSMakePoint(3, 33)];
                [bezier57Path lineToPoint: NSMakePoint(3, 5)];
                [bezier57Path lineToPoint: NSMakePoint(4, -5)];
                [bezier57Path lineToPoint: NSMakePoint(4, -14)];
                [bezier57Path lineToPoint: NSMakePoint(-4, -14)];
                [bezier57Path closePath];
                [bezier57Path setLineJoinStyle: NSRoundLineJoinStyle];
                [NSColor.whiteColor setFill];
                [bezier57Path fill];
                [primaryStroke setStroke];
                [bezier57Path setLineWidth: 2];
                [bezier57Path stroke];


                //// Oval 37 Drawing
                NSBezierPath* oval37Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(-6, -6, 12, 12)];
                [NSColor.whiteColor setFill];
                [oval37Path fill];
                [primaryStroke setStroke];
                [oval37Path setLineWidth: 2];
                [oval37Path stroke];



                [NSGraphicsContext restoreGraphicsState];
            }


            //// Bezier 70 Drawing
            NSBezierPath* bezier70Path = NSBezierPath.bezierPath;
            [bezier70Path moveToPoint: NSMakePoint(310, 191)];
            [bezier70Path lineToPoint: NSMakePoint(317, 191)];
            [bezier70Path moveToPoint: NSMakePoint(385, 191)];
            [bezier70Path lineToPoint: NSMakePoint(392, 191)];
            [primaryStroke setStroke];
            [bezier70Path setLineWidth: 2];
            [bezier70Path stroke];


            //// Bezier 72 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, 45 * M_PI / 180);

            NSBezierPath* bezier72Path = NSBezierPath.bezierPath;
            [bezier72Path moveToPoint: NSMakePoint(34, -0)];
            [bezier72Path lineToPoint: NSMakePoint(41, -0)];
            [primaryStroke setStroke];
            [bezier72Path setLineWidth: 2];
            [bezier72Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Bezier 73 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, -45 * M_PI / 180);

            NSBezierPath* bezier73Path = NSBezierPath.bezierPath;
            [bezier73Path moveToPoint: NSMakePoint(-41, -0)];
            [bezier73Path lineToPoint: NSMakePoint(-34, -0)];
            [primaryStroke setStroke];
            [bezier73Path setLineWidth: 2];
            [bezier73Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Bezier 74 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, 22.5 * M_PI / 180);

            NSBezierPath* bezier74Path = NSBezierPath.bezierPath;
            [bezier74Path moveToPoint: NSMakePoint(34, -0)];
            [bezier74Path lineToPoint: NSMakePoint(41, -0)];
            [primaryStroke setStroke];
            [bezier74Path setLineWidth: 2];
            [bezier74Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Bezier 75 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, -22.5 * M_PI / 180);

            NSBezierPath* bezier75Path = NSBezierPath.bezierPath;
            [bezier75Path moveToPoint: NSMakePoint(-41, 0)];
            [bezier75Path lineToPoint: NSMakePoint(-34, 0)];
            [primaryStroke setStroke];
            [bezier75Path setLineWidth: 2];
            [bezier75Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Bezier 76 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, -67.5 * M_PI / 180);

            NSBezierPath* bezier76Path = NSBezierPath.bezierPath;
            [bezier76Path moveToPoint: NSMakePoint(-41, 0)];
            [bezier76Path lineToPoint: NSMakePoint(-34, 0)];
            [bezier76Path moveToPoint: NSMakePoint(34, 0)];
            [bezier76Path lineToPoint: NSMakePoint(41, 0)];
            [primaryStroke setStroke];
            [bezier76Path setLineWidth: 2];
            [bezier76Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Bezier 77 Drawing
            [NSGraphicsContext saveGraphicsState];
            CGContextTranslateCTM(context, 351, 191);
            CGContextRotateCTM(context, 67.5 * M_PI / 180);

            NSBezierPath* bezier77Path = NSBezierPath.bezierPath;
            [bezier77Path moveToPoint: NSMakePoint(41, -0)];
            [bezier77Path lineToPoint: NSMakePoint(34, -0)];
            [bezier77Path moveToPoint: NSMakePoint(-34, -0)];
            [bezier77Path lineToPoint: NSMakePoint(-41, -0)];
            [primaryStroke setStroke];
            [bezier77Path setLineWidth: 2];
            [bezier77Path stroke];

            [NSGraphicsContext restoreGraphicsState];


            //// Oval 59 Drawing
            NSBezierPath* oval59Path = NSBezierPath.bezierPath;
            [oval59Path moveToPoint: NSMakePoint(367.02, 153.26)];
            [oval59Path curveToPoint: NSMakePoint(334.98, 153.26) controlPoint1: NSMakePoint(356.78, 148.91) controlPoint2: NSMakePoint(345.22, 148.91)];
            [oval59Path lineToPoint: NSMakePoint(337.72, 159.7)];
            [oval59Path curveToPoint: NSMakePoint(364.28, 159.7) controlPoint1: NSMakePoint(346.21, 156.1) controlPoint2: NSMakePoint(355.79, 156.1)];
            [oval59Path lineToPoint: NSMakePoint(367.02, 153.26)];
            [oval59Path closePath];
            [primaryStroke setStroke];
            [oval59Path setLineWidth: 2];
            [oval59Path stroke];
        }


        //// Variables Infrastructure Arm
        {
            //// Variable
            {
                //// Field Angle Drawing
                NSRect fieldAngleRect = NSMakeRect(142, 179, 52, 24);
                NSBezierPath* fieldAnglePath = [NSBezierPath bezierPathWithRoundedRect: fieldAngleRect xRadius: 4 yRadius: 4];
                [secondaryStroke setStroke];
                [fieldAnglePath setLineWidth: 2];
                [fieldAnglePath stroke];
                {
                    NSString* textContent = @"123";
                    NSMutableParagraphStyle* fieldAngleStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
                    fieldAngleStyle.alignment = NSCenterTextAlignment;

                    NSDictionary* fieldAngleFontAttributes = @{NSFontAttributeName: [NSFont fontWithName: @"AvenirNext-Medium" size: 16], NSForegroundColorAttributeName: secondaryStroke, NSParagraphStyleAttributeName: fieldAngleStyle};

                    CGFloat fieldAngleTextHeight = NSHeight([textContent boundingRectWithSize: fieldAngleRect.size options: NSStringDrawingUsesLineFragmentOrigin attributes: fieldAngleFontAttributes]);
                    NSRect fieldAngleTextRect = NSMakeRect(NSMinX(fieldAngleRect), NSMinY(fieldAngleRect) + (NSHeight(fieldAngleRect) - fieldAngleTextHeight) / 2, NSWidth(fieldAngleRect), fieldAngleTextHeight);
                    [NSGraphicsContext saveGraphicsState];
                    NSRectClip(fieldAngleRect);
                    [textContent drawInRect: NSOffsetRect(fieldAngleTextRect, 0, 5) withAttributes: fieldAngleFontAttributes];
                    [NSGraphicsContext restoreGraphicsState];
                }


                //// Rectangle 111 Drawing
                NSRect rectangle111Rect = NSMakeRect(142, 206, 52, 25);
                {
                    NSString* textContent = @"angle";
                    NSMutableParagraphStyle* rectangle111Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
                    rectangle111Style.alignment = NSCenterTextAlignment;

                    NSDictionary* rectangle111FontAttributes = @{NSFontAttributeName: [NSFont fontWithName: @"AvenirNext-Medium" size: 16], NSForegroundColorAttributeName: secondaryStroke, NSParagraphStyleAttributeName: rectangle111Style};

                    CGFloat rectangle111TextHeight = NSHeight([textContent boundingRectWithSize: rectangle111Rect.size options: NSStringDrawingUsesLineFragmentOrigin attributes: rectangle111FontAttributes]);
                    NSRect rectangle111TextRect = NSMakeRect(NSMinX(rectangle111Rect), NSMinY(rectangle111Rect) + (NSHeight(rectangle111Rect) - rectangle111TextHeight) / 2, NSWidth(rectangle111Rect), rectangle111TextHeight);
                    [NSGraphicsContext saveGraphicsState];
                    NSRectClip(rectangle111Rect);
                    [textContent drawInRect: NSOffsetRect(rectangle111TextRect, 0, 5) withAttributes: rectangle111FontAttributes];
                    [NSGraphicsContext restoreGraphicsState];
                }
            }


            //// Rectangle 124 Drawing
            NSBezierPath* rectangle124Path = NSBezierPath.bezierPath;
            [rectangle124Path moveToPoint: NSMakePoint(290, 191)];
            [rectangle124Path lineToPoint: NSMakePoint(195, 191)];
            [secondaryStroke setStroke];
            [rectangle124Path setLineWidth: 2];
            [rectangle124Path stroke];


            //// Oval 45 Drawing
            NSBezierPath* oval45Path = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(286, 188, 6, 6)];
            [secondaryStroke setFill];
            [oval45Path fill];
        }
    }
}

+ (void)drawO21NumberBit
{
    //// Color Declarations
    NSColor* outputGreen = [NSColor colorWithCalibratedRed: 0.243 green: 0.829 blue: 0.168 alpha: 1];
    NSColor* ledOn = [NSColor colorWithCalibratedRed: 0.652 green: 0.8 blue: 0.32 alpha: 1];

    //// Rectangle Drawing
    NSBezierPath* rectanglePath = [NSBezierPath bezierPathWithRect: NSMakeRect(49, 36, 134, 52)];
    [outputGreen setFill];
    [rectanglePath fill];


    //// Rectangle 2 Drawing
    NSBezierPath* rectangle2Path = [NSBezierPath bezierPathWithRect: NSMakeRect(60, 36, 111, 52)];
    [NSColor.whiteColor setFill];
    [rectangle2Path fill];
    [NSColor.grayColor setStroke];
    [rectangle2Path setLineWidth: 1];
    [rectangle2Path stroke];


    //// SevenSegmentLed1
    {
        //// Rectangle 3 Drawing
        NSBezierPath* rectangle3Path = [NSBezierPath bezierPathWithRect: NSMakeRect(104, 43, 24, 39)];
        [NSColor.grayColor setFill];
        [rectangle3Path fill];


        //// Rectangle 4 Drawing
        NSBezierPath* rectangle4Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(110, 76, 12, 3) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle4Path fill];


        //// Rectangle 5 Drawing
        NSBezierPath* rectangle5Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(110, 61, 12, 3) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle5Path fill];


        //// Rectangle 6 Drawing
        NSBezierPath* rectangle6Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(110, 46, 12, 3) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle6Path fill];


        //// Rectangle 7 Drawing
        NSBezierPath* rectangle7Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(107, 64, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle7Path fill];


        //// Rectangle 8 Drawing
        NSBezierPath* rectangle8Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(122, 64, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle8Path fill];


        //// Rectangle 9 Drawing
        NSBezierPath* rectangle9Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(122, 49, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle9Path fill];


        //// Rectangle 10 Drawing
        NSBezierPath* rectangle10Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(107, 49, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle10Path fill];
    }


    //// SevenSegmentLed2
    {
        //// Rectangle 11 Drawing
        NSBezierPath* rectangle11Path = [NSBezierPath bezierPathWithRect: NSMakeRect(132, 43, 24, 39)];
        [NSColor.grayColor setFill];
        [rectangle11Path fill];


        //// Rectangle 12 Drawing
        NSBezierPath* rectangle12Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(138, 76, 12, 3) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle12Path fill];


        //// Rectangle 13 Drawing
        NSBezierPath* rectangle13Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(138, 61, 12, 3) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle13Path fill];


        //// Rectangle 14 Drawing
        NSBezierPath* rectangle14Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(138, 46, 12, 3) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle14Path fill];


        //// Rectangle 15 Drawing
        NSBezierPath* rectangle15Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(135, 64, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle15Path fill];


        //// Rectangle 16 Drawing
        NSBezierPath* rectangle16Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(150, 64, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle16Path fill];


        //// Rectangle 17 Drawing
        NSBezierPath* rectangle17Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(150, 49, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle17Path fill];


        //// Rectangle 18 Drawing
        NSBezierPath* rectangle18Path = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(135, 49, 3, 12) xRadius: 1.5 yRadius: 1.5];
        [ledOn setFill];
        [rectangle18Path fill];
    }
}

@end
